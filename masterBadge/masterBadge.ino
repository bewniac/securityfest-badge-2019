// https://github.com/bbx10/Adafruit-PCD8544-Nokia-5110-LCD-library/tree/esp8266
#include <FS.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>
// https://gitlab.com/painlessMesh/painlessMesh
#include <painlessMesh.h>

#define   MESH_PREFIX     "SECFEST_19"
#define   MESH_PASSWORD   "SECFEST_19_PSK"
#define   MESH_PORT       5555

// Mesh
painlessMesh  mesh;
void receivedCallback(uint32_t from, String & msg);
void newConnectionCallback(uint32_t nodeId);
char* secrets[200] = {"1-50f50b00fe89109c41a47ced21dfead2a763dfa83d39a9dec1975b00c76a9a74055dd7", "2-ab3a5576a7af87eb35f4311601c7676474686e246e0481bea7c0bb88e3dada48aee836", "3-6415f67f8ea4c42a886cc3f9fe0dbe6cdc8fe831f7c182275a617c6a2d994acad25a94", "4-5ce5bf43bf34b6e6a4489b07e0ae001a50d0d845d4c44e9d890c708a051d6d636e656b", "1-2e80181242289da250c2fed27a37cb6f8b7c08fc250b7c6fb28225c4875a7fac3e42cc", "2-5a007c417569032e015b0c71ee6368c8a33249134a01b40ca9ea2f5e05efe31e6184bb", "3-eb5acc5ae0c3cdd1ada57ca14a41907d27ca1852cbf66224275e96788b9c9644262902", "4-89d1d166b4afc588949e05ad5e372c19c3f2b057cd4c5eba3558fc5e5024d45415f4b8", "1-e31c71128fbe9303abc8dc9ab0cc276ddffb41442ab98b443df78d482e515ed3daf260", "2-0985cef9e16800a26458eaf4b58278a020e59015d04c42bd59f5aa0ae1a160469711d1", "3-754317e2b954c0fc33acb86cdb5b6c17f09a88ec5e0963be5834bba0c6d93463340cc4", "4-0c2f36f3a019b9ae12c740f4d1ae2d786f382b80ed77d0426eb4a7c141dad47907005f", "1-b978bd7a768f79f167dd87b2cf0e925327893c83b871195aade3bdc45aee2f55cf0c9e", "2-5407be08c16b0584fc91c030abeb4c1f19bc36224ae7c1f46a09df5bd8b1833ae8d603", "3-72a5ab7b60662f286770c980baf0ed9631b1531c566a72e9fbdcfe7d8b76a6995e35e8", "4-12047792a99cf0ef20db672f6acd3f0d3b7e110d24ca4b00461c1c4472431340a8612c", "1-1b108af0829f9095384ba253e3169a8689ee883f4d202f9bc213c83f55db082f51817d", "2-70c73aa4922becd3ae01499d4fc4982a1183882a14c966768e356b3302d4fa2f27bbf1", "3-f40d185dc7362f1b6a7665cc72c7317697e959a8fd15e3aa70103fee5e26f8f60fd5f9", "4-dbc6d02ce299cc3e33097dca52ed811e78c230db4aa42c0561140aeed6b53ee8ff68a9", "1-0c6d2544255ff85ac9e961fb43c41edd2f7a86ab511c6a202b510f5911b352f4580223", "2-2af2f9465604e8fb8e7bc403f0b58189b1e40ac7398f4be00e65bab20781b51f77258e", "3-b945740ba4d943fcbbae2bfa6d64ac8e911ad5d1cc6f8b87190229091f1bed1d56c8d8", "4-bc9725c7447892b17f004dc8d75ff60a8d334a1544d2ecad2ae0d4daea084a9150357e", "1-4bbfd2425d179d27c65e94560169347b1ca7c60e6f9c7d5ba15d023c9c9e6e24ee9e96", "2-efb73a211eda3c7e347daecb973f381dfc65483a0be3807e6b97d9af2fe3a08a873faa", "3-3bd2406a944ff2040e1fb49f48433fbcef46d789c0835762f6fc4771ba54c458104e49", "4-1d9c16a734fd42449eaa9e1393093642bedec1321db8ee3426adf5b8722dd168c48c0e", "1-b3f60739d963fbf506f51edd2a7b1296e243e4bdd57ae259aaa64569fd8d79adf85f75", "2-decd794528899aa65633ec94da939400681397af2f58688b624531779d6fa5961f9354", "3-f2e1d6752668320eacfa7c4b2efdb54c85d42aaf5ede2095f4d5e8fc69cbd6cd9e2354", "4-78cf3623a2b7a203d65347896673e96030c915d11114641a4d99bdc0d59d736b2167e9", "1-08f7d2257339576d34545fe835384341c13b95d05ad5664d45a12eff3b0681e957b2ae", "2-85f71fc6e114aeafbef9ca1cdeb50f68964e2f8aa719b3b46c783046a355631d419d38", "3-12da65ea45afaa9f76911bf635987ff358f1e3e759307fbe15ef825b917ae8026fc0e3", "4-7a5cc9ce452c7ef631e5991184be3cab2ec70e605dec9e3f112ce7d0655c26759a24cd", "1-cc1eb33855ae8e9a4551267d1303dcf1ad1b38f477235d94b79b94e0745c4050c89460", "2-b169e4d0eb21a0c8ed3c61ece46831fefb968822626bbbebe64d0acf3c7eecd9823405", "3-e2adffe1690d7d0f5451c993297eded55909e96bb1b44c386de002cd410ba67f334f10", "4-e651db534d2c941e5153ad982bac465d2311b6b3ad717131bc47a81f5d730b23eae8ed", "1-384f1ca13a717fd6b60e6b5b3a37062fb798db5ebfda3a501731c3885780cff1c9d31c", "2-7ade2328cd0c3dcdb272b4c7118596f313e39b1bb9ac8b5d121927da2c7d1382751148", "3-dd4b978020ff1146f840519ef5a7a306abff19f8a28a1b4a391e78b072d4d685c52d21", "4-fd6c3788e73e5066080f3a515e6742818630c1713228eca280edfd20239f75f3d20612", "1-77500ae44c9efce12c580b9f71561432d13d914e11b8fcb929d85248c2d3e08db6d2ae", "2-1467dacc213b8d034f051dd72a994ebd37fb17fb8bfb9359efef57b52b4f6057eb8f27", "3-fced7821ba2722bf9f61984a85da6955e942df083ebfc5a7fa01991fe0b58a2c24b2fc", "4-e20091f938f3eb7cd58dca139f2503ce6b49bbb4eccc8bf17b9452469bab26ed6d488f", "1-2bf2348f4a70e3d2f1b07bc07e23d35ee40d2174c3e7cf8db9379df3dbe16931e77157", "2-50ba01ece62a281526446055a4b496dff25f24cbd298633cb6045f5ad4cc419eba3d03", "3-e4929d6a7bd8989a2bc895970482765b19d65c02b58306f633055e4b0604225924a321", "4-9dddb8639de6cc974d4945e4c067e9e15f1490c3a97d330a28901dfe5335afb805fdf0", "1-377d55047cae80fb43ffe9d4ee59dde7ea706116b96d62486b64cb3317ab28816cc981", "2-2a24440ff1bc992efd0d3748a0ac82f91733e1e7ff6e997bc7060a5ddc70bd569d5198", "3-8283b9025a904a8842ce509e90e06cc4f2c7d94ce2ff517490545d8cc2f29f2188776c", "4-66e328705a6273420482270e5be7e4ff73940d38911e40b79c0755ea02eda88c8b523f", "1-5eb33e6f1e2d3ead48ed53e3d153115437bc3a1168a27e004a12d00620860656eb61ba", "2-f7652143d5b8a9d40f6a1e44455e8bd019ca71b9d49a0ec3cea1f2f07c4de7147c4d7f", "3-360cb7251c17c424bbbbc3a54a18a95e21f2121518c4da84b885be1455e2ebb4eec3b0", "4-e7172c83966723ec7145009dff9db797bbe3b4c2e75dd366a2679fae7b0b03bef05b90", "1-d1e7c2386ce89515e91e5e1d95dd64280e4d0dbf45cc7dc907cfe531db672f1d08dc7f", "2-dc4a3993320b423c4a0bdaa422f0396d16fead9f26986ed621b180da0e90e66dbdb3af", "3-927753a2896184745f290abb69386e9f1737f99dc7a8b9581a48f909dcdec386cc80a5", "4-67529cda51e20658e199f52e8a09b3f856d0c165a0208d50aeef1aec8acc4ef569bbcc", "1-7ef196f865f7a65a4dade7468d37ffb65c01180ccc8bc4bae620938d515bb2e1524433", "2-55cdfa5b7da115e967aff99b876c3cf11547ea3c79ced1181323f2ae5bd76f67b627b4", "3-b4e6c4aacfd4e0eed63e90dfd44ef09d46c2ab8d11b9bfe5c935fdc103a5d7709d8cf2", "4-2af0b26bb8e66cdb29dcf57790157242cd27fd3229eac66b0ef9823124b9972b840d28", "1-e08354803328f2e2238ce296c7395f05d99d21f409b1e225b2f54ec228c65933b254ca", "2-e6d51d1eae859a5f733e1af717c0149c369a0392c2272d8196e3a067d3dbe2ffbe6bcc", "3-998ce1974a2f3be0ac8e76630eec7843e0837bdb6f6a65e318207247f234b13a75d073", "4-7334f235e4c7e8ac23b0909ea38886b0290a4713984ff9c4b4d686ffd87de4ecb52d0b", "1-26f707f908ad19979ded8ff6ebb40546f6a0bbcd21cc7cd3e802aa014ea6e34bd448b7", "2-288b3a24799fe0880dfc6d6da0b596c05de1af864f823dcf90531b1603955c89ca822d", "3-91a695d4a6b0aa426c2d6c999514a05ca4c54df6cab2eb5b44672df5441ab5346725ef", "4-e552bb62cab5adf2d636cac074df59602bff7ea1f67d6fd274ca3bc00adfb21abfb231", "1-317c5ca9a92b97daed18f473813b74881250b7791b394f8b4777c08013689909337283", "2-315ecfd08db67bf9686e309651b22da68b50370c914cc79eda6f8a2882baee18a37f4d", "3-9ff83b70f31fbf7e794a4ae70e9c6af49684d9c82e892252a12ed64a98fb7de7e9e2bb", "4-0df45dddfe7484be0cf0daf306b54c41fbda483ee772e8f0b3ea094de24dcf6af26cd1", "1-668b571b82f6413269ba8367fd1fbb3b4dba657f01101d28bc05991966d708b5948dc7", "2-858757a6ccf25a3545357f0caa4716dac38942f7366427bb1786b361908458ed0f3aec", "3-7cd6a8b49986485ad0b37269894d9e3b81b77e35938890d497b5b69aff7a5aaee2585e", "4-089951792702f752c638c30effadaad2b65be417e4ca3d33c40e52302336f4b2240912", "1-d2a1091d13c9cc7a629fafd26202a657ad30d29df1bf6784dce150b495cdcdd722e9a4", "2-400b4e77e11f5d31922e26f58309d7369d5cf5c1e5a9c15d73c5d2999368ae4f97b254", "3-0d70ef632554c2160c8d07253f1e42bb3fe87ee1b0ea0c9e93121ecf0f8c696eccb485", "4-34e3f5ab42908f086d4a72b4f0e3c5dc74f3e9b6891dbe059aa35b4fb38ae868c41761", "1-c16d4e5c074873af9f55b5ebfa25014a2499519f53ed12d903de33bf75af181a88843a", "2-a7aef81233663652f10eba1b2c33becd394f7cde9060749e7bf51ebfa4c592cdc6af82", "3-f9191e47e3ac16a0926781f208038c5d125274fc6771cc00441db1e2d843802137c4cd", "4-fb5c7aff0b8a0aecc9d9e91fd3438929e1d6c7e0a73ba86153faebc40172cd0871332f", "1-b696fbb52c0ad738a0ce82663d9cf8172f7e390ca3cea95f5ac89bb95bb32238c96c90", "2-b0fbd2de773d03e3dde0c87b663104db26409d01d33b5e5b4b322f05476233ee933e23", "3-99b781628cb587868112c41f85b8cf1606bafdb0d4095d432dcc285e15f81b2023bdc6", "4-377f2b1fc84593f3df6578305283dfb5fccdc7bcadfc8acd39dd0e6b3842dad18315d6", "1-092d89d4aa4a6eb2e2eafddb5a88069db2150af1a10dfe35d671fc5c50a4eb70e2d2e6", "2-7217fff030037dc2c3e42ec4cbf880d33810629996ecba60640f733a1289d2cb9d76fc", "3-e4e0de2d4dcb402ddd325d1d4f65b594858131d5931dee128e4813844b04334d064b6f", "4-44cc56f668c55b678a5cd25a869133d15276590527166903be99f9c09c84d64efb5a5f", "1-a57baec12434d9ff3e3931da4d35fdae4c023a02ce1a08abf556e42f366b6b6e4b048c", "2-d634d11f3525184aa8c8db05c39e42c0de306c208462ed854e944839a8196dbbd89fcb", "3-ec95d7d7c69392e86acd64dd50be8cb49db60f9fee844f6987f430f4975b0c23ea7432", "4-feb7883805e5bc3816288ed40a286626f60ff908308c2dac58fba052359b559a299363", "1-fd71d3ff9244922db0953d46a5937c568cb2176b5e43e3d1a6e3c1696b87b84571cf36", "2-133f85b13fa231050fb505b2b2d6344a365be02ca94efd4fcf711ad6b945181686671a", "3-7194fe477a64f075431cb6f6c9507bc6b56daefa53f1b4d955a4475ddbebaaa58e4759", "4-a0df9a298975150db0442d8068ad5ede82f7ba6c5cab14c1c10d6402bd34f12c39dc55", "1-0d4a469924b386cf4c148dbb711b71ca64f847596ca01c308c5f542683b7ea65cb6585", "2-4d5fb515877ca77c7979aa2e97aeab0f8cbc754439c261ad2333032e0047e1085d984b", "3-dfcf5b85744d72eec951a99738a0e91fe7c06ba0f19ed7da935acbea8ad9019bef12bb", "4-e44392c7ac0ac70d62e24b2613fe71a45ef4448ea89fa186fd659a6e6ab8766f3486f5", "1-334a635a280f4df80df47ae2e31d1dcf16e6e00dd817572c7684353f3779dafaa5de90", "2-8eefb6f7b09105a515350ac23eb1d02a301bbd327bd5b5d950a83f7ae3e4d1f5179c62", "3-227f7da44f1c1b00e4fdfe2203b9fe3f29790482073e48b21a1a96a7ddb401f9cbad87", "4-9de2b49379815060044e3381758e0b5245d1cf1e8155005802e41b598503509bfd40c4", "1-c5430bdb9d2ba1d991d101b0bec12cf6a75901716409b175e2291fce5349c7400336a2", "2-22c5bfb91ecb5892e4553972858405e4e02c76cc09cd4ecc4349f60355fa062e6c7144", "3-785c1c6b5462aa1689b8b6c0e5501ac848f12e00c93855fe9d56752f0f9acb9816a893", "4-c555c739357bffdcc22540b001d37e39289e7cfe4df028eacfc9fbc710c54d95d26714", "1-6af5c604a3d2a9ffda9a81e88e62653d198fd75eb3d50d2463bae31e9846d37c3b98c6", "2-c191bef00ada53de9c6cc9ec7cca31e60d9a485fdfa8327a1220dd68f1b8d62ac18d43", "3-34bed0fd7e8aa97cbacac6062cbd67011b91c6bcc88195194daca29460d70fa083faf0", "4-f31bae76bad5854788ed6137936d886ab39c4ae8064ac1d32420e63891330c6ffb12dd", "1-4a81319bee20a43c66351e6e711334d42244025cc84e06fec4df5a46d195d42ca65ba2", "2-2b5086ff8ea8ee77ac6922e995f8f720fb06600b574bf31b0369155933d26769181fa6", "3-fe0b1f6db70a19163660b2853afef02ed6c63bea3bf95fa2fb80d3fdeb6eb9b3c7ab71", "4-8e3a82adcc6a66accd8de71c1e4991b55a8a1300e8da184078b99c5e52d49163c061cc", "1-147c10118d921a6d22ea1ec89c348c544f4379a79045a7f721d8dd740e072d228c3511", "2-5be4ee2a1d0a7529066cbc1e0a502696411538f19a45a148dee995dc79bbf08788938f", "3-d0425632471a3c19d8ba2cd44871991801d218ebaefcacf8c307d44a7e95d7537d49eb", "4-5a6afc03b830cfe11768a41a3686b001aeda1ec486a2fde79d86a6d713362975f03acd", "1-2f828b8443056e4586b1cc7caf96a94c67721ac06d380f88e4ccfa9058aae77a571bf7", "2-5fb30191d082803337bf016e6de51b0a76e89c57069bb42c733ded18c37e0ef075679a", "3-efeb221c4405bd2b4d3243101c66819c1e1edf2acf5f11e3abc78b6a92fde37c5b9318", "4-9c6e413561b950f8915fbe9afa2915885f5cde2c278bc14259de8b6e38c47e832577a6", "1-69d6d44a6956e74de8333b27de117d4ed2755f34e2006a7df0cd28573d5a0b9737fd92", "2-a38b7b5204926176721f21f886d2fc90c841d946e2427c377f959296cebc910ebd8b8a", "3-55870711ba46d566661094dd86d6b20415b0dfcfa4bebc0db36e2623facf906ff3996d", "4-a65da1cccb475f247888c7370ca7e4c270916fec049c5eb0d2211c713bcc59ee902cee", "1-92112ed1c4c1217cfe006b2cca556ed724b438f27c09c4c36ec149276d597e9f065140", "2-bd952b51752b4ab24501a022d18fbcdc390fc1d8805fbcc2618a74d40bf36348bd0a70", "3-b05ead8966683893473d450cc5cfe1d1123fa09758aad246337da1116f831721c2b445", "4-3c27951a826f96347b5543b25d48f9a7e13e029db89da97a6602427d2477dc3b1e4099", "1-e17deb17a519e5dd40516291624b22075829facdb9e7349e2b48c312718bfaf0e367cb", "2-df08a7dd26274d7df1c778d55dd2931c5d5e89f362a738affbd48cffd92c0cb1787f85", "3-a1afe4c354bcfbfd4daa9446e18c82c10af32a837fbca676ecaad30fa18efcb7e2f73b", "4-e80c90006681a398334bdc6e34747fa55c37a39bd9f932fd1788032d2c209f50a8ccb5", "1-f583d390d2bbc93777caf2f98f758be893664b7d695190c0ed0d3fee8f0f8677ce011c", "2-547358135f3ebcef36cc4e6668d4b9869c7a31edbfb0efbb356dc0f62a44109966a17f", "3-3e2a238a5a072685bd3a329d39b401b40098232d721dd53ce45663faac629c18d14f16", "4-74e5549ecdc4e1a71dade883e395cf858091be5b923ce27182304cfef3733399853a7e", "1-10f4959269cff377ce0faf7fce052cb4ebad236a6c8c9fd9fcffab508840e24db1d887", "2-770891e0a922744520dc3f76cccd1f9c742456068b9eb52d58d24671ce637e5bd217c9", "3-f826ac7b176fd46f12ef1e0bdcdd00f2900d2cd143ee80b3981b71c34f0a96e01a203b", "4-9447d0a3222f805ea7e622d230452138370fae99043145cc6025fe1e91db74c5c04fe9", "1-00f2312c5bd3289e80673c113b05e233fd4291f9f0f3d5f46a7b048ec5b7c709d07706", "2-46477fb7e6376f7c3031a5d17672428098c98068e7ae49bc916d9404a82e844f620dd9", "3-d96fe6926a6614bf4c6a17c2936293696a0f482cb3a1360fc7200c6864b049b0cb95aa", "4-b3d290a110b70582b6cfe67407c09b4aea1ecf608f691fc461806dd3abce429d6d6f81", "1-4aeb1ef4814116bc954a619be786aed24b593fe4a49d74b7a3f8cd8ba30c64b45384d3", "2-1ef95a55f6c92477c7bf446fbb70730106a7d4cc04028770fe71cf33c9a0c80bdd9d38", "3-cbc8eca8a00a6196aec9abf682e3ee09427ab2950463598061bf9e5a6385a649f7f69e", "4-309f322ba6234eaa2e834fa44dd659421fa6445065f6b3734fd7ff4bdb36f6eaf39500", "1-a9af073280ed7ad3ae5ae65a8d57ea134a3aa51b4b19d9e55eb2239a14772047028a1e", "2-6166a4cbfef523c22e27689198b084d7d5c1ea4958ccbe3250799a1299991d7d8e6f7e", "3-57130bf0a99a0a4c7c4100c9cbf25d1e907f16efb729cd9032fd256a84c737ccf50a15", "4-2bfffb5f9bc83c6f83579babd3de4fbcffee14b0d3774e6b41b1710180782e4593c222", "1-a92bb8c2125c6a9987c95a67af884f266a95f0d8ab27c8266cbbb1cfd54d08accc2bdb", "2-1729d6a8d8a3a011254319a59917fac32cbbc3afb2ea99eb083e588e34b803f26b2177", "3-21d8c6631d7d99d55eb6cdc0e88a863f49aa6acabd31fb8a58b375a3e8dc01a8dee5d9", "4-1a792991dbb7b6d4f4935cfac0f0626fed884ef9ae5310a5006d6ce4676f2e3bb96a19", "1-9f035f0aa9f584438741d06f667e193dfd715d8a5d236d0d348e79e648b342eb147a70", "2-45cce6215d5c2235b7f0cd5dbd5fee1bf807f1b6655dda0cb2119a14d4c3b685a27d98", "3-45151122232bf52bcc8d93300534c4fc0af2f5819c821d46baa97f109559fe98cfe89d", "4-4560b4e11af9ccdf9f7ff6ac56f2a861a925883aefc5b1ae5d23a2f6c984c335cc2d23", "1-c6fc46aa868402d49e2b8408fed89471c0ca62a78cdd770f6bad64e7831bf5d4f91565", "2-9802217fe24221773d0e84dc45fd80ec1381e941c35328b4011996b15c91f5639a3909", "3-c124cfdcb34470fe5f198ed665302747dccfd25beb72f5fc56826eb4d6a30a411ac319", "4-463eea27e331f3e86a28e094800ba4303de82365b4134e2f0e0b6125a52cf29e36ceed", "1-d2d23fe9c5d21e011eb6cca9657be590efd4707b6b8cf2f3a8e8ce28e1b5082ee1e683", "2-d00da5d990e9cf2057e3e8ef5cdbefc4d22f677053156e24cd030dad98a304d59689e2", "3-9d05323982b9827cb569aa44e7b5398e327f4eb69c65369059dd5f67703f060d0e8014", "4-576c3be8d67970b710adcd320bc549cbc0ff9127ef0af6abbc796d1428f538fadaf182", "1-55851ec303b70df945e61f2d358a77e26b509e429f47078c4ab6e449e3077bba744373", "2-f6c22301f6fdb7b24a1557b00835510bf4ff40e9e542c381367f4cbc609fe095bd4e50", "3-3c9d95cb22c8e916f3cfc69fe3aa1533902b8716def96e4a40ff34178ab191d9b0e256", "4-bb74246fb128fc19861cd2d3762e5cfd323831bdfca4b088b581b8782decfdde8f473a", "1-9015624ec9d5690c9df40633dc9c5425a293f75f03cc54333821d2733f6229584c7cdb", "2-8a238f6dff642494ca34a7b3cd71a7001b5c56110f86983a1262905ef707444c0635a5", "3-85ec452ae1331ec5abfc2f82cff8c0ffb64bf8f3a8b6664e1675decfc14c67e233a60b", "4-9db22969d76eb16046483a2ca10576fb1de90f436667f4e9f974c3e1bf95b01ad5acbf", "1-c7a2cd30a88022db6f7cb4841b4e8113395ae46ecc6f887c346f3225d143bdde7e086f", "2-870289b15d192f21d96f54c84e8a48e247f739adfc9928a3e79489b19b0a9a09e14ff6", "3-df7aec88221b5ea74a2f6e4e8bd1fa2b7129847e940a0a98efcd277643602d21e6a8ec", "4-0ec9445110cad661b9d5848b978bbf02085af7473138b5c5a7379535a6b5d1b71510bf", "1-f315e5f567026535fa73944dadd9c753229d6e79ee9578869c42ccd0257eb1cbc22c41", "2-6e8fec2bdfc7437b8a919f123d1abd867c53c34f7ba7b18ea1b946a790733cc5077860", "3-0240a1d76f4775138cde855d4ed6490f514af48b31ce634f01cd1695bc2487f8bcbb54", "4-de5f5f20621d80c8f9aa3a1b0a53b25a4fbcb9b1346864ff72b4c0ee3c4867b0a086d4"};
int groupIndex = 0;
char* nodeSecrets[200][3];
int MAX_NODES = 200;
int groupNr = 0;
int nrOfSecrets = 0;

const char* filename = "/nodes";
/*
    nodeSecrets[NodeIdIndex][0 = NodeId, 1=Group, 2=Secret]
    if groupSize[groupIndex] == 4 then groups[groupIndex] is full. groupIndex++
    secret:GROUPNAME:1-83247671d6207372b47e5039ea2c1103356afe16238cb7e4a9bb3e0b0803858c3aa386
*/

int getSecretIndex(char nodeId[]) {
  for (int i = 0; i < nrOfSecrets; i++) {
    if (strcmp(nodeId, nodeSecrets[i][0]) == 0) {
      /* Node exists */
      Serial.println("Node exists");
      return i;
    }
  }
  /* New node */
  if (nrOfSecrets < MAX_NODES) {
    if (SPIFFS.exists(filename)) {
      File file = SPIFFS.open(filename, "a");
      if (!file) {
        Serial.println("Failed open file");
      }
      else {
        Serial.println("Appending node to file");
        file.println(nodeId);
        file.close();
        strncpy(nodeSecrets[nrOfSecrets][0], nodeId, 11);
        nrOfSecrets++;
        Serial.print("Number of secrets: ");
        Serial.println(nrOfSecrets);
        return nrOfSecrets-1;
      } 
      file.close();
    } else {
      File file = SPIFFS.open(filename, "w");
      if (!file) {
        Serial.println("Failed open file");
      }
      else {
        Serial.println("Writing node to file");
        file.println(nodeId);
        file.close();
        strncpy(nodeSecrets[nrOfSecrets][0], nodeId, 11);
        nrOfSecrets++;
        Serial.print("Number of secrets: ");
        Serial.println(nrOfSecrets);
        return nrOfSecrets-1;
      } 
      file.close();
    }
  } else {
    Serial.println("MORE THAN 200 NODES! WHAT IS THIS!");
  }
}

void receivedCallback( uint32_t from, String &msg ) {
  String recv = msg;
  char s_nodeId[11];
  String s_send = "secret:";
  sprintf(s_nodeId, "%lu", from);
  s_nodeId[11] = '\0';
  if ( recv == "giveme" ) {
    int index = getSecretIndex(s_nodeId);

    s_send += nodeSecrets[index][1]; // Group
    s_send += ":";
    s_send += nodeSecrets[index][2]; // Secret

    mesh.sendSingle(from, s_send);
  }
}

// Prints out new connections on serial
void newConnectionCallback(uint32_t nodeId) {
  Serial.printf("New Connection, nodeId = %u\n", nodeId);
}

/*
   GPIO14 - Serial clock out (SCLK)
   GPIO13 - Serial data out (DIN)
   GPIO12 - Data/Command select (D/C)
   GPIO05 - LCD chip select (CS)
   GPIO04 - LCD reset (RST)
*/

Adafruit_PCD8544 display = Adafruit_PCD8544(14, 13, 12, 5, 4);

// Variables
const unsigned char logo [] = {
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x3c, 0x0, 0x0,
  0x0, 0x0, 0x1, 0xff, 0x0, 0x0,
  0x0, 0x3, 0x8f, 0x8, 0xc0, 0xc0,
  0x0, 0x3, 0xfc, 0x4, 0x20, 0xc0,
  0x0, 0x6, 0xc8, 0x4, 0x11, 0xe0,
  0x0, 0x3e, 0x90, 0x6, 0x9, 0x20,
  0x1, 0xf6, 0xa0, 0x1f, 0x85, 0x20,
  0x3, 0x86, 0xc0, 0x22, 0x63, 0x20,
  0x3, 0x6, 0xc0, 0x43, 0x13, 0x20,
  0x3, 0x6, 0xc0, 0x8c, 0x89, 0x20,
  0x3, 0x6, 0xc1, 0x1b, 0x45, 0x20,
  0x2, 0x4, 0x41, 0x30, 0xa5, 0xa0,
  0x6, 0x4, 0x41, 0x3e, 0x84, 0xa0,
  0x6, 0x4, 0x41, 0x7f, 0x58, 0xa0,
  0x6, 0x4, 0x40, 0xe7, 0x50, 0xe0,
  0x6, 0x4, 0x40, 0xc3, 0x30, 0x60,
  0xc, 0x4, 0x40, 0xc3, 0xb0, 0x60,
  0xc, 0x4, 0x40, 0xc3, 0xb0, 0x60,
  0xc, 0x7, 0xc0, 0xc3, 0xb0, 0x60,
  0xc, 0xf, 0xc0, 0xc3, 0xb0, 0x60,
  0xc, 0x19, 0x40, 0xc3, 0xb0, 0x60,
  0x18, 0x19, 0x40, 0x43, 0x30, 0x60,
  0x18, 0x19, 0x40, 0x7f, 0x50, 0x60,
  0x1e, 0xf, 0xc0, 0x7e, 0x50, 0x60,
  0x1f, 0xff, 0xc0, 0xac, 0x92, 0x60,
  0x8, 0xff, 0x84, 0x91, 0x3a, 0x60,
  0xc, 0x2, 0x81, 0x18, 0x48, 0x60,
  0x4, 0x2, 0xc2, 0x7, 0x84, 0x40,
  0x6, 0x2, 0x78, 0x3, 0x2, 0x40,
  0x2, 0x3, 0x8, 0x1, 0x1, 0xc0,
  0x3, 0x1, 0xfc, 0x1, 0x0, 0x80,
  0x1, 0x1, 0x84, 0x1, 0x0, 0x80,
  0x1, 0x80, 0x86, 0x1, 0x1, 0x80,
  0x0, 0x80, 0xfe, 0x1, 0x1, 0x0,
  0x0, 0xc0, 0xc3, 0x1, 0x3, 0x0,
  0x0, 0x40, 0x7f, 0x1, 0x6, 0x0,
  0x0, 0x60, 0x61, 0x81, 0x1c, 0x0,
  0x0, 0x30, 0x3f, 0xff, 0xe4, 0x0,
  0x0, 0x3e, 0x10, 0x8f, 0x88, 0x0,
  0x0, 0xf, 0xd8, 0x82, 0x10, 0x0,
  0x0, 0x0, 0xfe, 0x86, 0x20, 0x0,
  0x0, 0x0, 0xf, 0x84, 0xc0, 0x0,
  0x0, 0x0, 0x0, 0xff, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
  0x0, 0x0, 0x0, 0x0, 0x0, 0x0
};
void printLogo(void) {
  display.clearDisplay();
  display.drawBitmap(18, 0, logo, 48, 48, 1);
  display.display();
}

void setup(void) {
  // Serial for debugging
  Serial.begin(115200);
  Serial.println();
  Serial.println("MasterBadge v0.1 SuperAlpha started.");
  //mesh.setDebugMsgTypes( ERROR | MESH_STATUS | CONNECTION | SYNC | COMMUNICATION | MSG_TYPES | REMOTE );
  //mesh.setDebugMsgTypes( COMMUNICATION | ERROR );
  mesh.init(MESH_PREFIX, MESH_PASSWORD, MESH_PORT);
  mesh.onNewConnection(&newConnectionCallback);
  mesh.onReceive(&receivedCallback);
  mesh.setRoot();

  for (int i = 0; i < 4; i++) {
    nodeSecrets[i][0] = new char[11];
    nodeSecrets[i][1] = new char[3];
    sprintf(nodeSecrets[i][1], "%02d", groupNr);
    nodeSecrets[i][1][3] = '\0';
    nodeSecrets[i][2] = secrets[i];
  }
  groupNr++;
  for (int i = 4; i < MAX_NODES; i++) {
    nodeSecrets[i][0] = new char[11];
    nodeSecrets[i][1] = new char[3];
    sprintf(nodeSecrets[i][1], "%02d", groupNr);
    nodeSecrets[i][1][3] = '\0';
    if ((groupNr % 4) == 0) {
      groupNr++;
    }
    nodeSecrets[i][2] = secrets[i];
  }

  if (SPIFFS.begin()) {
    Serial.println("SPIFFS works!");
  }
  else {
    Serial.println("SPIFFS failed!");
  }

  File file = SPIFFS.open(filename, "r");
  if (file) {
    while (file.available()) {
      String line = file.readStringUntil('\n');
      line.trim();
      strncpy(nodeSecrets[nrOfSecrets][0], line.c_str(), 11);
      nodeSecrets[nrOfSecrets][0][11] = '\0';
      Serial.print("Node in file: ");
      Serial.print(nodeSecrets[nrOfSecrets][0]);
      Serial.print(" at position: ");
      Serial.println(nrOfSecrets);
      nrOfSecrets++;
    }
    file.close();
  }
  // Display setup
  display.begin(60);
  printLogo();
}

void loop(void) {
  // Mesh update
  mesh.update();
}
